 @jwt_required
    @admin_only
    def get(self,product_id = None):
        """Get all products"""
        list_products = Product.fetch_all_products(self)       
    
        # If the list is empty
        if len(list_products) == 0:
            return make_response(jsonify({
            'message': 'The product list is empty'
            }), 200)
        return make_response(jsonify(
            {
                'status': 'Ok',
                'Message': 'success',
                'product': [product.serialize() for product in Product.products]
            }
        ), 200)

        """Get a single product from the products list"""
        view_product = Product().fetch_by_id(product_id)
        if view_product:
            return make_response(jsonify({
                'status': 'ok',
                'message': 'success',
                'product': view_product.serialize()
            }), 200)

        """Identify a single item with it's id and fetch it and if it's not present return the following """  
        return make_response(jsonify({
            'status': 'failed',
            'message': 'not found'
        }), 404)
class AllProducts(Resource):

    def get(self):
        ''' get all products '''
        productitems = ProductItem().fetch_all_productitems()

        if not productitems:
            return {"message": "There are no productitems for now "}, 404

        return {"Product items": [productitems.serialize() for productitem in productitems]}, 200



  
        